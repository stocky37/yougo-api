name: CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  APP_NAME: yougo-api
  REGISTRY_GITHUB: docker.pkg.github.com/${{ github.repository }}
  REGISTRY_HEROKU: registry.heroku.com/yougo-api

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: 11
        distribution: adopt

    - name: Maven cache
      uses: actions/cache@v2
      with:
        path: ~/.m2
        key: maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: maven

    - name: Unit tests
      run: mvn -B test --file pom.xml

  build:
    name: Build & publish container image
    needs: test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Build container image
      id: build-image
      uses: redhat-actions/buildah-build@v2.5
      with:
        image: ${{ env.APP_NAME }}
        dockerfiles: src/main/docker/Dockerfile.jvm-multi

    - name: Publish image to GitHub Packages
      uses: redhat-actions/push-to-registry@v2
      if: github.ref == 'refs/heads/main'
      with:
        image: ${{ steps.build-image.outputs.image }}
        tags: ${{ steps.build-image.outputs.tags }}
        registry: ${{ env.REGISTRY_GITHUB }}
        username: ${{ github.actor }}
        password: ${{ github.token }}

  deploy:
    name: Deploy to Heroku
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
    - name: Copy image to Heroku
      run: >-
        skopeo copy
        docker://${{ env.REGISTRY_GITHUB }}/${{ env.APP_NAME }}
        docker://${{ env.REGISTRY_HEROKU }}/web
        --src-creds '${{ github.actor }}:${{ github.token }}'
        --dest-creds '${{ secrets.HEROKU_EMAIL }}:${{ secrets.HEROKU_API_KEY  }}'

    - name: Heroku release
      run: heroku container:release -a ${{ env.APP_NAME }} web
      env:
        HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
